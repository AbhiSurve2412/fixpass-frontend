@use 'styles/theme' as *;
@use '@angular/material' as mat;

* {
  margin: 0;
  padding: 0;
}

html,
body {
  min-height: 100vh;
  min-width: 100vw;
  overflow: hidden;
  background-color: rgba($fixpass-bg, 0.8);
  /* For all scrollbars */
  ::-webkit-scrollbar {
    width: 0.25rem;
  }

  ::-webkit-scrollbar-track {
    background-color: var(--fixpass-primary);
    border-radius: 0.625rem;
  }

  ::-webkit-scrollbar-thumb {
    background-color: var(--fixpass-primary);
    border-radius: 0.625rem;
    border: 0.125rem solid var(--fixpass-primary);
  }

  ::-webkit-scrollbar-thumb:hover {
    background: var(--fixpass-primary);
  }

  mat-form-field {
    --mat-form-field-container-height: 2.18rem;
  }

  .mdc-text-field--outlined .mat-mdc-form-field-infix {
    padding: 0.6rem;
  }

  .mat-mdc-form-field-error-wrapper {
    padding: 0;
  }

  mat-error {
    color: var(--fixpass-error) !important;
  }

  .mat-mdc-option.mdc-list-item {
    background: transparent;
    backdrop-filter: blur(2.5rem);
  }

  .mat-mdc-menu-panel{
    background: transparent;
    backdrop-filter: blur(2.5rem);
    border-radius: 0.5rem;
  }
  .mat-mdc-menu-item:not([disabled]):hover{
    background: $fixpass-gray-300;
  }

  .primary-btn {
    background-color: var(--fixpass-primary);
    color: var(--fixpass-white);
    border-radius: 0.5rem;
  }

  .secondary-btn {
    background-color: var(--fixpass-secondary) !important;
    color: var(--fixpass-white) !important;
    border-radius: 0.5rem;
  }

  .full-width {
    width: 100%;
  }

  .cdk-overlay-pane {
    margin-top: -0.5rem !important;
    margin-right: -0.5rem !important;
  }

  .snackbar-success {
    background-color: var(--fixpass-success);
    color: var(--fixpass-white);
  }

  .snackbar-error {
    background-color: var(--fixpass-error);
    color: var(--fixpass-white);
  }

  .snackbar-warning {
    background-color: var(--fixpass-warning);
    color: var(--fixpass-black);
  }

  .snackbar-info {
    background-color: var(--fixpass-info);
    color: var(--fixpass-white);
  }

  .spinner-container {
    display: flex;
    justify-content: center;
    align-items: center;
    z-index: 1000;
    height: 100vh;
  }

  .mat-mdc-snack-bar-container .mat-mdc-button.mat-mdc-snack-bar-action:not(:disabled) {
    --mat-button-text-state-layer-color: transparent;
    --mat-button-text-ripple-color: transparent;
  }

  mat-progress-spinner {
    stroke: var(--fixpass-secondary) !important; 
  }

  .mat-mdc-tab-header{
    background: var(--fixpass-secondary);
  }

  .mat-mdc-tab.mdc-tab{
    padding: 0 0.5rem;
    border: 0.063rem solid $fixpass-gray-600;
    border-radius: 0.5rem;
    margin: 0.3rem;
    height: 2rem;
  }

  .mdc-tab--active {
    background: $fixpass-gray-300;
    border: none;
  }  

  .mdc-tab-indicator {
    display: none;
  }

  .secondary-tooltip {
    color: var(--fixpass-white);
    background:  var(--fixpass-black);
    border-radius: 0.5rem;
  }

  .disabled-field {
    .mat-mdc-text-field-wrapper {
      background-color:  $fixpass-gray-300;
  }
  }

  .snake-border-btn {
    position: relative;
    overflow: hidden;
    padding: 0.8rem 2.2rem;
    font-size: 1rem;
    font-weight: 600;
    border: none;
    color: var(--fixpass-white);
    background: var(--fixpass-primary);
    border-radius: 0.75rem;
    cursor: pointer;
    transition: transform 0.25s ease, box-shadow 0.25s ease;
    z-index: 1;
    text-transform: capitalize;
    letter-spacing: 0.03em;
    color: var(--fixpass-white) !important;
    &:hover {
      transform: translateY(-0.125rem);
      box-shadow: 0 0.375rem 1.25rem $fixpass-gray-300;
    }
  
    &::before {
      content: "";
      position: absolute;
      inset: 0;
      border-radius: inherit;
      padding: 0.125rem;
      background: linear-gradient(
        120deg,
        var(--fixpass-error),
        var(--fixpass-warning),
        var(--fixpass-white),
        var(--fixpass-success),
        );
      background-size: 300% 300%;
      animation: snake-border 3s linear infinite;
      mask:
        linear-gradient(var(--fixpass-white) 0 0) content-box,
        linear-gradient(var(--fixpass-white) 0 0);
      mask-composite: exclude;
      -webkit-mask-composite: destination-out;
      z-index: 0;
    }
  
    &::after {
      content: "";
      position: absolute;
      inset: 0;
      background: var(--fixpass-primary);
      border-radius: inherit;
      z-index: -1;
    }
  
    &:hover::before {
      animation-duration: 1.8s;
      filter: brightness(1.1);
    }
  }
  
  @keyframes snake-border {
    0% {
      background-position: 0% 50%;
    }
    50% {
      background-position: 100% 50%;
    }
    100% {
      background-position: 0% 50%;
    }
  }  
}
